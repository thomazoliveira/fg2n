/* 
Implementng Factor Groups with Prime Order on Binary Elliptic Curves
Hu, Oliveira, Zhang, Zhao

# Factor group, Weierstrass form, h=4 
*/
clear;

/* field */
PR<Z> := PolynomialRing(GF(2));
IZ := IrreduciblePolynomial(GF(2), 283);
F<z> := ext<GF(2)|IZ>;

/* curve */
a2 := F!0;
a6 := F!1;
t6 := Sqrt(a6);
e6 := Sqrt(t6);
E := EllipticCurve([F|1, a2, 0, 0, a6]);

/* points */
T2 := E![0, 1];
F1 := E![1, 1];
F3 := E![1, 0];
OO := E!0;

/* auxiliary functions */
load "aux.magma";

/* encode */
function enc(P) 
    uP := P[1];
    vP := P[2];

    uF1 := e6;
    vF1 := ht(a2, 283)*e6 + t6;

    if (uP eq F!0) or (uP eq e6) then        
        return F!0;           
    else                     
        if Trace(uP) eq 1 then
            l := (vF1 + vP)*(uF1 + uP)^-1;
            u3 := l^2 + l + uP + uF1 + a2;
            v3 := l*(uP + u3) + u3 + vP;
        else
            u3 := uP;
            v3 := vP;
        end if;

        aux := v3*u3^-1;
        
        if Trace(aux) eq 1 then
            return t6*u3^-1;
        else
            return u3; 
        end if; 
    end if;
end function;

/* decode */
function dec(zet)
    if zet eq F!0 then            
        return true, E!0;
    end if;                                 
                                            
    s := zet + a6*zet^-2;               
    t := Trace(s);                          
    
    if t eq 1 then                          
        return false, E!0;
    end if;                                 

    rho := ht(s+a2, 283);                        
    t := Trace(rho + zet);                
    
    if t eq 0 then                          
        return true, E![zet,rho*zet];    
    else                                    
        return true, E![zet,(rho+1)*zet];
    end if;                                 
end function;

/* equality */
function equ(P, Q)
    uP := P[1];
    vP := P[2];
    uQ := Q[1];
    vQ := Q[2];

    /* H4 */
    if (uP eq F!0) or (uP eq e6) then
        if (uQ eq F!0) or (uQ eq e6) then
            return true;
        end if;
        return false;
    end if;

    /* diff = OO */
    if (uP eq uQ) then
        if (vP eq vQ) then
            return true;
        end if;
        return false;
    end if;

    /* diff = T2 */
    if (uP*uQ eq t6) then
        if (vQ*uP^2 eq t6*(uP+vP)+a6+t6*uP^2) then
            return true;
        end if;
        return false;
    end if;

    /* diff = F1, F3 */
    if (e6*(uP^2+uQ^2) eq (uP*(vQ+uQ+uQ^2) + uQ*(vP+uP^2))) then
        return true;
    end if;
    return false;
end function;

